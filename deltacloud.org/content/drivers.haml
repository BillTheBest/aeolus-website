!!! Strict
%html
  %head
    %title
      Deltacloud - Documentation
    %meta{ :name => "keywords", :content => "" }
    %meta{ :name => "description", :content => "" }
    %meta{ :content => "text/html; charset=utf-8", "http-equiv" => "Content-Type" }
    %link{ :href => "./styles/favicon.ico", :rel => "shortcut icon", :type => "image/x-icon" }
    %link{ :href => "./styles/default.css", :title => "Main style", :rel => "StyleSheet", :type => "text/css" }
    %link{ :href => "./styles/default-debug.css", :title => "Debug main style", :rel => "Alternate StyleSheet", :type => "text/css" }
  %body
    #header
      .container
        #headerLogo{ :onclick => "location.href='index.html';", :style => "cursor: pointer;" }
          %h1
            Deltacloud - Many clouds. One API. No problem.
    #navigation
      #menu.container
        %ul.l0
          %li
            %a.inactive{ :href => "./index.html", :title => "Deltacloud Home" }
              Home
          %li
            %a.inactive{ :href => "./tools.html", :title => "Tools" }
              Tools
          %li
            %a.inactive{ :href => "./download.html", :title => "Get the latest releases" }
              Download
          %li
            %a.inactive{ :href => "./contribute.html", :title => "Information about design/development process" }
              Contribute
          %li
            %a.active{ :href => "./documentation.html", :title => "Project documentation" }
              Documentation
          %li
            %a.inactive{ :href => "./page", :title => "Project wiki" }
              Wiki
    #subnavigation
      #submenu.container
        %ul.l1
          %li
            %a.inactive{ :href => "documentation.html" }
              Overview
          %li
            %a.inactive{ :href => "api.html" }
              REST API
          %li
            %a.inactive{ :href => "client-ruby.html" }
              Ruby Client
          %li
            %a.active{ :href => "drivers.html" }
              Drivers
          %li
            %a.inactive{ :href => "framework.html" }
              Framework
    #main
      #content-deltacloud.container
        %ul.toc
          %li
            %a{ :href => "#setting_up_the_code" }
              Setting up the code
          %li
            %a{ :href => "#launch_the_server" }
              Launch the server
            %ul
              %li
                %a{ :href => "#launch_the_server_ec2_driver" }
                  EC2 Driver
              %li
                %a{ :href => "#launch_the_server_rhev-m_driver" }
                  RHEV-M Driver
              %li
                %a{ :href => "#launch_the_server_rackspace_driver" }
                  Rackspace Driver
              %li
                %a{ :href => "#launch_the_server_rimuhosting" }
                  RimuHosting
              %li
                %a{ :href => "#launch_the_server_opennebula" }
                  OpenNebula
        %h1
          Deltacloud Drivers
        %p
          The Deltacloud project current delivers two functional drivers, plus
          a mock driver for testing without a cloud provider.
        %ul
          %li
            Amazon EC2
          %li
            Red Hat Enterprise Virtualization Manager (RHEV-M)
          %li
            Rackspace Cloud
          %li
            RimuHosting Cloud
          %li
            OpenNebula
        %h2
          %a{ :name => "setting_up_the_code" }
            Setting up the code
        %p
          To set up a given driver, currently, you must checkout the code
          for both the
          %a{ :href => "framework.html" }
            framework
          and the drivers you wish to use.
        %p
          Check out the core repository
        %pre
          %code
            deltacloud/
            core/
        %h2
          %a{ :name => "launch_the_server" }
            Launch the server
        %p
          First, go into the server directory
        %pre
          %code
            cd server/
        %p
          To launch the server, you must tell it which driver to use.  This can
          be accomplished either through editing the
          %code
            config/environment.rb
          of the framework,
          or by setting the
          %code
            $DRIVER
          environment variable.
        %p
          If adjusting
          %code
            config/environment.rb
          the
          %code
            DEFAULT_DRIVER
          variable should be set
        %pre
          %code
            DEFAULT_DRIVER=:rhevm
        %p
          Even if set, it may still be overwritten by the
          %code
            $DRIVER
          environment variable
          which takes precendence.
        %p
          Once configured, simply launch
          %code
            script/server
          for the framework.
        %pre
          %code
            $ ./script/server
        %p
          (Or using the
          %code
            $DRIVER
          variable)
        %pre
          %code
            $ DRIVER=ec2 ./script/server
        %h3
          %a{ :name => "launch_the_server_ec2_driver" }
            EC2 Driver
        %p
          When using the driver for Amazon EC2, the credentials passed in
          response to the HTTP 401 authentication challenge should be your
          %em
            access_key
          and
          %em
            secret_access_key
        %p
          These credentials may be found on the
          %a{ :href => "http://aws-portal.amazon.com/gp/aws/developer/account/index.html?action=access-key" }
            Access Identifiers
          page at Amazon AWS.
        %h3
          %a{ :name => "launch_the_server_rhev-m_driver" }
            RHEV-M Driver
        %p
          The RHEV-M driver needs to be installed on a Windows machine which has the
          RHEV-M Powershell API installed and configured. Assuming the directory
          structure above is followed, you should copy the file
          deltacloud/deltacloud-driver-rhevm/config/rhevm
          %em
            config.yaml.EXAMPLE to be
            rhevm
          config.yaml and edit the file woith the domain you are logging into.
          The username and pasword is provided via the API.
        %p
          The actual RHEVM instance you are connecting to is controlled by
          the RHEVM.dll.config file which is referenced from the profile.ps1
          file located in My Documents/WindowsPowershell directory
        %h3
          %a{ :name => "launch_the_server_rackspace_driver" }
            Rackspace Driver
        %p
          When using the Rackspace-cloud driver (Rackspace cloud used to be called
          "Mosso") - the password in a HTTP 401 challenge should be your API key, NOT
          your rackspace account password.  (you can get the API-key, or generate a
          new one, from the rackspace console).
        %h3
          %a{ :name => "launch_the_server_rimuhosting" }
            RimuHosting
        %p
          Further details coming soon.
        %h3
          %a{ :name => "launch_the_server_opennebula" }
            OpenNebula
        %p
          When using the
          %a{ :href => "http://www.opennebula.org/" }
            OpenNebula
          driver, the
          credentials passed in response to the HTTP 401 authentication challenge
          should be your OpenNebula user and password.
        %p
          The address, on which the OCCI server is listening, needs to be defined in
          an environment variable called OCCI_URL.
    #footer-deltacloud
      #projects.container
        %p#et
          %a{ :href => "http://et.redhat.com/" }
            %img{ :src => "./styles/et_logo.png", :alt => "A Red Hat Emerging Technology Project" }
        %dl#p1
          %dt
            %a{ :href => "http://augeas.net/" }
              Augeas
          %dd
            %span
              A configuration editing tool and API
          %dt
            %a{ :href => "http://libvirt.org/" }
              libvirt
          %dd
            %span
              The open source virtualization API
        %dl#p2
          %dt
            %a{ :href => "http://cobbler.et.redhat.com/" }
              Cobbler
          %dd
            OS provisioning and profile management
          %dt
            %a{ :href => "http://libguestfs.org/" }
              virt-v2v
          %dd
            %span
              Migrate guests from one hypervisor to another
        %dl#p3
          %dt
            %a{ :href => "http://freeipa.org/" }
              FreeIPA
          %dd
            %span
              Identity, policy and audit management
          %dt
            %a{ :href => "http://virt-manager.org/" }
              Virtual Machine Manager
          %dd
            %span
              Virtualization management from the desktop
