Overview
--------

The Aeolus project consists of several components.  Taken together, these
components come together to create the Aeolus Conductor, which can be used
to manage diverse sets of cloud instances across many different clouds.  Under
the hood, the Deltacloud API is used to tie everything together, and provides
a common framework for adding support for new clouds.

Getting the sources
-------------------
There are several repositories that contain source code for the various
Aeolus conductor pieces.  For historical reasons, some of the pieces reference
Deltacloud even though they are not related to the API.  These will be fixed
over time.

While not directly part of the conductor, the Deltacloud API Core repository
is hosted on [Apache Incubator][incubator].
Apache uses Subversion, but there is a git mirror available:

    $ mkdir deltacloud
    $ cd deltacloud
    $ git clone git://git.apache.org/deltacloud.git core

You can find the Subversion repository at: <https://svn.apache.org/repos/asf/incubator/deltacloud>.

The **docs** repository contains the project documentation and the sources of
the <http://aeolusproject.org> website.

    $ git clone git://git.fedorahosted.org/git/deltacloud/docs.git/

To get the main code for the conductor:

    $ git clone git://git.fedorahosted.org/git/deltacloud/aggregator.git/

To get the current code for iwhd:

    $ git clone git://repo.or.cz/iwhd.git

To get the current imagefactory (nee imagebuilder) code:

    $ git clone git://git.fedorahosted.org/git/deltacloud/image_builder.git/

To get the boxgrinder code:

    $ git clone git://github.com/stormgrind/boxgrinder-core
    $ git clone git://github.com/stormgrind/boxgrinder-build.git
    $ git clone git://github.com/stormgrind/boxgrinder-build-plugins.git

To get the oz code (next generation of the image building backend):

    $ git clone git://github.com/clalancette/oz.git

To get the condor patches that are necessary to use deltacloud:

    $ git clone git://github.com/clalancette/condor-dcloud.git

Required packages
-----------------
The easiest way to get started with the Aeolus conductor is to use the
pre-packaged set of RPMs available at
<http://repos.fedorapeople.org/repos/deltacloud/appliance>.  However, if you
are not using a Fedora repository, a mostly complete list of necessary
packages follows (which may have different names on your distribution):

 appliance-tools
 condor
 deltacloud-aggregator
 deltacloud-aggregator-daemons
 deltacloud-configure
 euca2ools
 hail
 httpd
 iwhd
 libdeltacloud
 livecd-tools
 mongodb
 mongodb-server
 postgresql
 postgresql-server
 python-imgcreate
 qmf
 qpid-cpp-client
 qpid-cpp-server
 ruby
 ruby-RMagick
 ruby-atk
 ruby-cairo
 ruby-gdk_pixbuf2
 ruby-gettext-package
 ruby-glib2
 ruby-gtk2
 ruby-irb
 ruby-libguestfs
 ruby-libs
 ruby-locale
 ruby-pango
 ruby-postgres
 ruby-qmf
 ruby-rdoc
 ruby-spqr
 rubygem-actionmailer
 rubygem-actionpack
 rubygem-activerecord
 rubygem-activeresource
 rubygem-activesupport
 rubygem-amazon-ec2
 rubygem-atk
 rubygem-authlogic
 rubygem-aws
 rubygem-boxgrinder-build
 rubygem-boxgrinder-build-centos-os-plugin
 rubygem-boxgrinder-build-ec2-platform-plugin
 rubygem-boxgrinder-build-fedora-os-plugin
 rubygem-boxgrinder-build-local-delivery-plugin
 rubygem-boxgrinder-build-rhel-os-plugin
 rubygem-boxgrinder-build-rpm-based-os-plugin
 rubygem-boxgrinder-build-s3-delivery-plugin
 rubygem-boxgrinder-core
 rubygem-builder
 rubygem-cairo
 rubygem-commander
 rubygem-compass
 rubygem-compass-960-plugin
 rubygem-cucumber
 rubygem-daemons
 rubygem-deltacloud-client
 rubygem-deltacloud-core
 rubygem-deltacloud-image-builder-agent
 rubygem-diff-lcs
 rubygem-eventmachine
 rubygem-facets
 rubygem-ffi
 rubygem-gdk_pixbuf2
 rubygem-gettext
 rubygem-gherkin
 rubygem-glib2
 rubygem-gtk2
 rubygem-haml
 rubygem-hashery
 rubygem-highline
 rubygem-imagebuilder-console
 rubygem-json
 rubygem-locale
 rubygem-macaddr
 rubygem-mime-types
 rubygem-nokogiri
 rubygem-open4
 rubygem-pango
 rubygem-parseconfig
 rubygem-rack
 rubygem-rack-accept
 rubygem-rack-restful_submit
 rubygem-rack-test
 rubygem-rails
 rubygem-rake
 rubygem-rb-inotify
 rubygem-rcov
 rubygem-rerun
 rubygem-rest-client
 rubygem-right_aws
 rubygem-right_http_connection
 rubygem-rspec
 rubygem-simple-navigation
 rubygem-sinatra
 rubygem-term-ansicolor
 rubygem-thin
 rubygem-trollop
 rubygem-typhoeus
 rubygem-uuid
 rubygem-uuidtools
 rubygem-will_paginate
 rubygem-xml-simple
 rubygems

Setting up the Aggregator
------------------------------------
If you have installed all of the dependencies listed above, the easiest way
to get a running Aeolus Conductor is to run the deltacloud-configure script.
Note that deltacloud-configure may erase any data in a running postgres
database, so make sure to use a machine where you don't care about the data
in postgres:

    $ sudo deltacloud-cleanup
    $ sudo deltacloud-configure

Running tests
-------------
The Aeolus conductor itself comes with a number of unit tests.  There are
currently two test suites: one for cucumber and one for rspec.  The rspec
tests need an instance of the core server running on port 3001 to function,
but the cucumber tests do not.  To run them, you need to change into the
conductor source repository and run the appropriate rake commands:

    $ cd /path/to/aggregator/src
    $ rake cucumber
    $ rake spec

[incubator]: http://incubator.apache.org/
